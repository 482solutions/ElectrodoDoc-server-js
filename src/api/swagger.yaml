---
swagger: "2.0"
info:
  description: "Specification for Woden REST API"
  version: "1.0.0"
  title: "Woden"
host: "localhost"
basePath: "/api/v1"
schemes:
  - "https"
  - "http"
paths:
  /user:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "After registration user receive Certificate for Fabric CA"
      operationId: "CreateUser"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: "login"
          in: "formData"
          required: true
          type: "string"
        - name: "email"
          in: "formData"
          required: true
          type: "string"
        - name: "password"
          in: "formData"
          required: true
          type: "string"
        - name: "CSR"
          in: "formData"
          description: "The CSR to upload."
          required: true
          type: "string"
      responses:
        "201":
          description: "Certificate"
        "409":
          description: "User already exist"
        "422":
          description: "Invalid user data"
      x-swagger-router-controller: "User"
    put:
      tags:
        - "user"
      summary: "Update user password"
      description: "Changing user credentials"
      operationId: "ChangeUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/body"
      responses:
        "200":
          description: "Successfully"
        "203":
          description: "Not Authorized"
        "422":
          description: "Invalid entity"
      security:
        - Bearer: []
      x-swagger-router-controller: "User"
  /user/auth:
    post:
      tags:
        - "user"
      summary: "Login user into the system"
      description: "Authentication for users to get in to the system and receive JWT\
        \ token"
      operationId: "Login"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: "login"
          in: "formData"
          required: true
          type: "string"
        - name: "password"
          in: "formData"
          required: true
          type: "string"
        - name: "certificate"
          in: "formData"
          description: "The certificate to upload."
          required: true
          type: "string"
        - name: "privateKey"
          in: "formData"
          description: "The private key to upload."
          required: true
          type: "string"
      responses:
        "200":
          description: "JWT token"
        "400":
          description: "Incorrect password"
        "403":
          description: "Bad certificate"
        "404":
          description: "User not fount"
        "422":
          description: "Required Email or Username"
      x-swagger-router-controller: "User"
  /user/logout:
    delete:
      tags:
        - "user"
      summary: "Logout user from the system"
      description: "Manualy exit from the system"
      operationId: "Logout"
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successfuly"
        "203":
          description: "Not Authorized"
      security:
        - Bearer: []
      x-swagger-router-controller: "User"
  /folder:
    get:
      tags:
        - "file_system"
      summary: "Get folder"
      description: "Geting folder means that user will receive the contents of the\
        \ folder (files and folders)"
      operationId: "getFolder"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/body_1"
      responses:
        "200":
          description: "Ð¡ontents of the folder"
        "203":
          description: "Not Authorized"
        "404":
          description: "Folder not found"
      security:
        - Bearer: []
      x-swagger-router-controller: "FileSystem"
    post:
      tags:
        - "file_system"
      summary: "Create folder"
      description: "Creating folder by user"
      operationId: "createFolder"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/body_2"
      responses:
        "201":
          description: "Created folder"
        "203":
          description: "Not Authorized"
        "409":
          description: "Folder with this name already exist"
        "422":
          description: "Invalid folder/parent folder name suplied"
      security:
        - Bearer: []
      x-swagger-router-controller: "FileSystem"
  /file:
    get:
      tags:
        - "file_system"
      summary: "Download file"
      description: "Downloading file from current folder"
      operationId: "downloadFile"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/body_3"
      responses:
        "200":
          description: "File to download"
        "203":
          description: "Not Authorized"
        "404":
          description: "File not found"
      security:
        - Bearer: []
      x-swagger-router-controller: "FileSystem"
    post:
      tags:
        - "file_system"
      summary: "Upload file"
      description: "Uploading file in current folder"
      operationId: "uploadFile"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "formData"
          required: true
          type: "string"
        - name: "parentFolder"
          in: "formData"
          required: true
          type: "string"
        - name: "file"
          in: "formData"
          description: "The file to upload."
          required: true
          type: "file"
      responses:
        "200":
          description: "Updated folder with this file"
        "203":
          description: "Not Authorized"
        "404":
          description: "Folder not exist"
        "422":
          description: "Invalid file/parent folder name suplied"
      security:
        - Bearer: []
      x-swagger-router-controller: "FileSystem"
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  body:
    type: "object"
    properties:
      oldPassword:
        type: "string"
      newPassword:
        type: "string"
  body_1:
    properties:
      hash:
        type: "string"
  body_2:
    properties:
      name:
        type: "string"
      parentFolder:
        type: "string"
  body_3:
    properties:
      hash:
        type: "string"
