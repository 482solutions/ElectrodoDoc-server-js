version: '3'
services:
  backend:
    container_name: backend
    build: .
    depends_on:
      - postgres
    #    ports:
    #      - 8080:8080
    network_mode: "service:postgres"
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}:5432/${DB_NAME}
      NODE_ENV: development
      PORT: 1823
      FABRIC_HOST: ${FABRIC_HOST}
      FABRIC_PORT: ${FABRIC_PORT}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DATABASE_HOST: ${DB_HOST}
      DATABASE_PORT: ${DB_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      WODEN_JWT_SECRET: ${JWT_SECRET}
      FABRIC_CONFIG_FILE: ${CONFIG_FILE}
    command: sh -c "sleep 5 && npm start"
    volumes:
      - .:/app/
      - /app/node_modules

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_HOST=${DATABASE_HOST}
    ports:
      - 1823:1823
      - '5432:5432'
    volumes:
      - database_postgres:/var/lib/postgresql
    networks:
      - front_default

  #  pgadmin:
  #    image: dpage/pgadmin4
  #    container_name: pgadmins
  #    environment:
  #      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #    depends_on:
  #      - postgres
  #    ports:
  #      - "5050:80"
  #    networks:
  #      - woden
  #    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    network_mode: service:backend
    volumes:
      - ./storage/redis:/data
    entrypoint: redis-server --appendonly yes

  ipfs:
    image: ipfs/go-ipfs:v0.4.22
    container_name: ipfs
    depends_on:
      - redis
    network_mode: service:backend
    volumes:
      - $HOME/ipfs/staging:/export
      - $HOME/ipfs/data:/ipfs/data
    environment:
      - IPFS_API_URL=${IPFS_API_URL}
#    ports:
#      - "5001:5001"
#      - "4001:4001"
#      - "8081:8080"

volumes:
  api:
  database_postgres:
  conf:

networks:
  front_default:
    external: true