version: '3'
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_HOST=${DATABASE_HOST}
    ports:
      # - 1823:1823
      - '127.0.0.1:5432:5432'
      - '127.0.0.1:6379:6379'
      - "127.0.0.1:5001:5001"
      - "127.0.0.1:4001:4001"
      - "127.0.0.1:8081:8080"
    volumes:
      - database_postgres:/var/lib/postgresql

  #  pgadmin:
  #    image: dpage/pgadmin4
  #    container_name: pgadmins
  #    environment:
  #      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #    depends_on:
  #      - postgres
  #    ports:
  #      - "5050:80"
  #    networks:
  #      - woden
  #    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    network_mode: service:postgres
    volumes:
      - ./storage/redis:/data
    entrypoint: redis-server --appendonly yes

  ipfs:
    image: ipfs/go-ipfs:v0.4.22
    container_name: ipfs
    depends_on:
      - redis
    network_mode: service:postgres
    volumes:
      - $HOME/ipfs/staging:/export
      - $HOME/ipfs/data:/ipfs/data
    environment:
      - IPFS_API_URL=${IPFS_API_URL}
#    ports:
#      - "5001:5001"
#      - "4001:4001"
#      - "8081:8080"

volumes:
  database_postgres: