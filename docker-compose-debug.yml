version: '3'
services:

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '5432:5432'
    volumes:
      - database_postgres:/var/lib/postgresql
    networks:
      - front_default

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ./storage/redis:/data
    entrypoint: redis-server --appendonly yes


  ipfs0:
    container_name: ipfs0
    image: ipfs/go-ipfs:release
    ports:
      - "4001:4001" # ipfs swarm
      - "4002:4002/udp" # udp swarm
      - "5001:5001" # expose if needed/wanted
    #         - "8080:8080" # exposes if needed/wanted
    volumes:
      - ./compose/ipfs0:/data/ipfs

  cluster0:
    container_name: cluster0
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs0
    environment:
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs0/tcp/5001
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      # Change this! Same for all peers!
      CLUSTER_SECRET: 5f071a74995ee719e9040bfc26233c1ba607c1b192a9f58da8a18373ca18d208
      IPFS_API: /dns4/ipfs0/tcp/5001
    ports:
      - "9094:9094" # API
    #         - "9096:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - ./compose/cluster0:/data/ipfs-cluster

      ## Cluster PEER 1 ################################################################
  ipfs1:
    container_name: ipfs1
    image: ipfs/go-ipfs:release
    ports:
      - "4101:4001" # ipfs swarm
      - "4102:4002/udp" # udp swarm
      - "5101:5001" # expose if needed/wanted
    #         - "8180:8080" # exposes if needed/wanted
    volumes:
      - ./compose/ipfs1:/data/ipfs

  # cluster1 bootstraps to cluster0 if not bootstrapped before
  cluster1:
    container_name: cluster1
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - cluster0
      - ipfs1
    environment:
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs1/tcp/5001
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      # Change this! Same for all peers!
      CLUSTER_SECRET: 5f071a74995ee719e9040bfc26233c1ba607c1b192a9f58da8a18373ca18d208
      IPFS_API: /dns4/ipfs1/tcp/5001
    ports:
      - "9194:9094" # API
    #         - "9196:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - ./compose/cluster1:/data/ipfs-cluster
    entrypoint:
      - "/sbin/tini"
      - "--"
    # Translation: if state folder does not exist, find cluster0 id and bootstrap
    # to it.
    command: >-
      sh -c '
        cmd="daemon --upgrade"
        if [ ! -d /data/ipfs-cluster/raft ]; then
          while ! ipfs-cluster-ctl --host /dns4/cluster0/tcp/9094 id; do
            sleep 1
          done
          pid=`ipfs-cluster-ctl --host /dns4/cluster0/tcp/9094 id | grep -o -E "^(\w+)"`
          sleep 10
          cmd="daemon --bootstrap /dns4/cluster0/tcp/9096/ipfs/$$pid"
        fi
        /usr/local/bin/entrypoint.sh $$cmd
      '
volumes:
  api:
  database_postgres:
  conf:

networks:
  front_default:
    external: true